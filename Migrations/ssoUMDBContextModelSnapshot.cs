// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ssoUM.DAL;

#nullable disable

namespace ssoUM.Migrations
{
	[DbContext(typeof(ssoUMDBContext))]
	partial class ssoUMDBContextModelSnapshot : ModelSnapshot
	{
		protected override void BuildModel(ModelBuilder modelBuilder)
		{
#pragma warning disable 612, 618
			modelBuilder
				.HasAnnotation("ProductVersion", "7.0.8")
				.HasAnnotation("Relational:MaxIdentifierLength", 63);

			NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

			modelBuilder.Entity("ssoUM.DAL.Entities.App", b =>
				{
					b.Property<long>("Aid")
						.ValueGeneratedOnAdd()
						.HasColumnType("bigint")
						.HasColumnName("aid");

					NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Aid"));

					b.Property<string>("AppName")
						.IsRequired()
						.ValueGeneratedOnAdd()
						.HasMaxLength(30)
						.HasColumnType("character(30)")
						.HasColumnName("app_name")
						.HasDefaultValueSql("''::bpchar")
						.IsFixedLength();

					b.Property<long?>("Jid")
						.HasColumnType("bigint")
						.HasColumnName("jid");

					b.Property<string>("Redirecturl")
						.IsRequired()
						.HasMaxLength(100)
						.HasColumnType("character varying(100)")
						.HasColumnName("redirecturl");

					b.HasKey("Aid")
						.HasName("app_pk");

					b.HasIndex(new[] { "Jid" }, "IX_app_jid");

					b.ToTable("app");
				});

			modelBuilder.Entity("ssoUM.DAL.Entities.Jwt", b =>
				{
					b.Property<long>("Jid")
						.ValueGeneratedOnAdd()
						.HasColumnType("bigint")
						.HasColumnName("jid");

					NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Jid"));

					b.Property<string>("Description")
						.IsRequired()
						.HasMaxLength(30)
						.HasColumnType("character varying(30)")
						.HasColumnName("description");

					b.Property<long?>("Kid")
						.HasColumnType("bigint")
						.HasColumnName("kid");

					b.HasKey("Jid")
						.HasName("jwt_pk");

					b.HasIndex(new[] { "Kid" }, "IX_jwt_kid");

					b.ToTable("jwt");
				});

			modelBuilder.Entity("ssoUM.DAL.Entities.Key", b =>
				{
					b.Property<long>("Kid")
						.ValueGeneratedOnAdd()
						.HasColumnType("bigint")
						.HasColumnName("kid");

					NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Kid"));

					b.Property<string>("Algo")
						.IsRequired()
						.HasMaxLength(30)
						.HasColumnType("character varying(30)")
						.HasColumnName("algo");

					b.Property<string>("PrivateKey")
						.IsRequired()
						.HasColumnType("character varying")
						.HasColumnName("private_key");

					b.Property<string>("PublicKey")
						.HasColumnType("character varying")
						.HasColumnName("public_key");

					b.Property<short>("Type")
						.HasColumnType("smallint")
						.HasColumnName("type");

					b.HasKey("Kid")
						.HasName("keys_pk");

					b.ToTable("keys");
				});

			modelBuilder.Entity("ssoUM.DAL.Entities.Role", b =>
				{
					b.Property<long>("Rid")
						.ValueGeneratedOnAdd()
						.HasColumnType("bigint")
						.HasColumnName("rid");

					NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Rid"));

					b.Property<long?>("Aid")
						.HasColumnType("bigint")
						.HasColumnName("aid");

					b.Property<long?>("RPid")
						.HasColumnType("bigint")
						.HasColumnName("r_pid");

					b.Property<string>("RoleCode")
						.IsRequired()
						.HasMaxLength(30)
						.HasColumnType("character varying(30)")
						.HasColumnName("role_code");

					b.HasKey("Rid")
						.HasName("role_pk");

					b.HasIndex(new[] { "Aid" }, "IX_role_aid");

					b.HasIndex(new[] { "RPid" }, "IX_role_r_pid");

					b.ToTable("role");
				});

			modelBuilder.Entity("ssoUM.DAL.Entities.User", b =>
				{
					b.Property<long>("Uid")
						.ValueGeneratedOnAdd()
						.HasColumnType("bigint")
						.HasColumnName("uid");

					NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Uid"));

					b.Property<long>("Aid")
						.HasColumnType("bigint")
						.HasColumnName("aid");

					b.Property<string>("PasswordHash")
						.IsRequired()
						.HasMaxLength(100)
						.HasColumnType("character varying(100)")
						.HasColumnName("password_hash");

					b.Property<string>("PasswordSalt")
						.IsRequired()
						.HasMaxLength(100)
						.HasColumnType("character varying(100)")
						.HasColumnName("password_salt");

					b.Property<string>("Username")
						.IsRequired()
						.HasMaxLength(100)
						.HasColumnType("character varying(100)")
						.HasColumnName("username");

					b.HasKey("Uid")
						.HasName("user_pk");

					b.HasIndex(new[] { "Aid" }, "IX_user_aid");

					b.ToTable("user");
				});

			modelBuilder.Entity("ssoUM.DAL.Entities.UserHasRole", b =>
				{
					b.Property<long>("MappingId")
						.ValueGeneratedOnAdd()
						.HasColumnType("bigint")
						.HasColumnName("mapping_id");

					NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("MappingId"));

					b.Property<long>("Rid")
						.HasColumnType("bigint")
						.HasColumnName("rid");

					b.Property<long>("Uid")
						.HasColumnType("bigint")
						.HasColumnName("uid");

					b.HasKey("MappingId")
						.HasName("user_has_role_pk");

					b.HasIndex("Rid");

					b.HasIndex("Uid");

					b.ToTable("user_has_role");
				});

			modelBuilder.Entity("ssoUM.DAL.Entities.App", b =>
				{
					b.HasOne("ssoUM.DAL.Entities.Jwt", "JidNavigation")
						.WithMany("Apps")
						.HasForeignKey("Jid")
						.OnDelete(DeleteBehavior.SetNull)
						.HasConstraintName("app_fk");

					b.Navigation("JidNavigation");
				});

			modelBuilder.Entity("ssoUM.DAL.Entities.Jwt", b =>
				{
					b.HasOne("ssoUM.DAL.Entities.Key", "KidNavigation")
						.WithMany("Jwts")
						.HasForeignKey("Kid")
						.OnDelete(DeleteBehavior.SetNull)
						.HasConstraintName("jwt_fk");

					b.Navigation("KidNavigation");
				});

			modelBuilder.Entity("ssoUM.DAL.Entities.Role", b =>
				{
					b.HasOne("ssoUM.DAL.Entities.App", "AidNavigation")
						.WithMany("Roles")
						.HasForeignKey("Aid")
						.OnDelete(DeleteBehavior.SetNull)
						.HasConstraintName("role_t_app_fk");

					b.HasOne("ssoUM.DAL.Entities.Role", "RP")
						.WithMany("InverseRP")
						.HasForeignKey("RPid")
						.HasConstraintName("role_fk");

					b.Navigation("AidNavigation");

					b.Navigation("RP");
				});

			modelBuilder.Entity("ssoUM.DAL.Entities.User", b =>
				{
					b.HasOne("ssoUM.DAL.Entities.App", "AidNavigation")
						.WithMany("Users")
						.HasForeignKey("Aid")
						.OnDelete(DeleteBehavior.Cascade)
						.IsRequired()
						.HasConstraintName("user_fk");

					b.Navigation("AidNavigation");
				});

			modelBuilder.Entity("ssoUM.DAL.Entities.UserHasRole", b =>
				{
					b.HasOne("ssoUM.DAL.Entities.Role", "RidNavigation")
						.WithMany("UserHasRoles")
						.HasForeignKey("Rid")
						.IsRequired()
						.HasConstraintName("user_has_role_role_fk");

					b.HasOne("ssoUM.DAL.Entities.User", "UidNavigation")
						.WithMany("UserHasRoles")
						.HasForeignKey("Uid")
						.IsRequired()
						.HasConstraintName("user_has_role_user_fk");

					b.Navigation("RidNavigation");

					b.Navigation("UidNavigation");
				});

			modelBuilder.Entity("ssoUM.DAL.Entities.App", b =>
				{
					b.Navigation("Roles");

					b.Navigation("Users");
				});

			modelBuilder.Entity("ssoUM.DAL.Entities.Jwt", b =>
				{
					b.Navigation("Apps");
				});

			modelBuilder.Entity("ssoUM.DAL.Entities.Key", b =>
				{
					b.Navigation("Jwts");
				});

			modelBuilder.Entity("ssoUM.DAL.Entities.Role", b =>
				{
					b.Navigation("InverseRP");

					b.Navigation("UserHasRoles");
				});

			modelBuilder.Entity("ssoUM.DAL.Entities.User", b =>
				{
					b.Navigation("UserHasRoles");
				});
#pragma warning restore 612, 618
		}
	}
}
